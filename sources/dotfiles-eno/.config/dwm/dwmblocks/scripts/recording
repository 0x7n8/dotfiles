#!/bin/sh

# Usage:
# `$0`: Ask for recording type via dmenu
# `$0 screencast`: Record both audio and screen
# `$0 video`: Record only screen
# `$0 audio`: Record only audio
# `$0 kill`: Kill existing recording
# `-vf "unsharp=5:5:0.6:3:3:0.4,hqdn3d=3:2:3:3"`
# If there is already a running instance, user will be prompted to end it.

updateicon() { \
	echo "$1" > /tmp/recordingicon
	pkill -RTMIN+9 "${STATUSBAR:-dwmblocks}"
	}

killrecording() {
	recpid="$(cat /tmp/recordingpid)"
	# kill with SIGTERM, allowing finishing touches.
	kill -15 "$recpid"
	rm -f /tmp/recordingpid
	updateicon ""
	pkill -RTMIN+9 "${STATUSBAR:-dwmblocks}"
	# even after SIGTERM, ffmpeg may still run, so SIGKILL it.
	sleep 1
	kill -9 "$recpid"
	exit
	}

Scale() {
  xwin_info=$(xwininfo)
  X=$(echo "$xwin_info" | grep "Absolute upper-left X" | awk '{print $4}')
  Y=$(echo "$xwin_info" | grep "Absolute upper-left Y" | awk '{print $4}')
  WIDTH=$(echo "$xwin_info" | grep Width | awk '{print $2}')
  HEIGHT=$(echo "$xwin_info" | grep Height | awk '{print $2}')
  OFFSET_X=10 # Nilai offset sisi kiri
  OFFSET_Y=10 # Nilai offset sisi atas
  X=$((X - OFFSET_X))
  Y=$((Y - OFFSET_Y))
  WIDTH=$((WIDTH + 25))
  HEIGHT=$((HEIGHT + 25))
  WIDTH=$((WIDTH - WIDTH%2))
  HEIGHT=$((HEIGHT - HEIGHT%2))
  ffmpeg -f x11grab -r 60 -video_size "$WIDTH"x"$HEIGHT" -i :0.0+"$X","$Y" \
    -c:v libx264 -crf 18 -pix_fmt yuv420p \
    -preset superfast -threads 0 \
    "$HOME/Vidio/record-$(date '+%y%m%d-%H%M-%S').mp4" & \
    echo $! > /tmp/recordingpid
      updateicon "🔴 𝗿𝗲𝗰 "
    }

screencast() { \
	ffmpeg -y \
	-f x11grab \
	-framerate 60 \
	-s "$(xdpyinfo | awk '/dimensions/ {print $2;}')" \
	-i "$DISPLAY" \
	-f alsa -i default \
	-r 30 \
 	-c:v h264 -crf 28 -preset ultrafast -c:a aac \
	"$HOME/Vidio/screencast-$(date '+%y%m%d-%H%M-%S').mp4" & \
	echo $! > /tmp/recordingpid
	updateicon "🔴🎙️"
       	}

video() { ffmpeg \
	-f x11grab \
	-s "$(xdpyinfo | awk '/dimensions/ {print $2;}')" \
	-i "$DISPLAY" \
 	-c:v libx264 -crf 28 -qp 0 -r 30 \
	-preset veryfast -threads 0 \
	-filter_complex "anullsrc=r=48000:cl=stereo" \
	"$HOME/Vidio/vidio-$(date '+%y%m%d-%H%M-%S').mp4" &
	echo $! > /tmp/recordingpid
	updateicon "🔴 𝗿𝗲𝗰 "
	}

TeleRec() { ffmpeg \
    -f x11grab \
    -r 60 -i :0.0+0,0 -filter_complex "anullsrc=r=48000:cl=stereo" \
    -c:v libx264 -crf 18 -pix_fmt yuv420p \
    -preset veryfast -threads 0 \
    "$HOME/Vidio/record-$(date '+%y%m%d-%H%M-%S').mp4" &
    echo $! > /tmp/recordingpid
    updateicon "🔴 𝗿𝗲𝗰 "
    }


webcamhidef() { ffmpeg \
	-f v4l2 \
	-i /dev/video0 \
	-video_size 1920x1080 \
	"$HOME/Vidio/webcam-$(date '+%y%m%d-%H%M-%S').mkv" &
	echo $! > /tmp/recordingpid
	updateicon "🎥"
	}

webcam() { ffmpeg \
	-f v4l2 \
	-i /dev/video0 \
	-video_size 640x480 \
	"$HOME/Vidio/webcam-$(date '+%y%m%d-%H%M-%S').mkv" &
	echo $! > /tmp/recordingpid
	updateicon "🎥"
	}


audio() { \
	ffmpeg \
	-f alsa -i default \
	-c:a flac \
	"$HOME/Vidio/audio-$(date '+%y%m%d-%H%M-%S').flac" &
	echo $! > /tmp/recordingpid
	updateicon "🎙️"
	}

askrecording() { \
	choice=$(printf "Scale\\nscreencast\\nvideo\\nTeleRec\\nvideo selected\\naudio\\nwebcam\\nwebcam (hi-def)" | dmenu -i -p "Select recording style:")
	case "$choice" in
    Scale) Scale;;
		screencast) screencast;;
		audio) audio;;
		video) video;;
        TeleRec) TeleRec;;
		*selected) videoselected;;
		webcam) webcam;;
		"webcam (hi-def)") webcamhidef;;
	esac
	}

asktoend() { \
	response=$(printf "No\\nYes" | dmenu -i -p "Recording still active. End recording?") &&
	[ "$response" = "Yes" ] &&  killrecording
	}

videoselected()
{
	slop -f "%x %y %w %h" > /tmp/slop
	read -r X Y W H < /tmp/slop
	rm /tmp/slop

	ffmpeg \
	-f x11grab \
	-framerate 60 \
	-video_size "$W"x"$H" \
	-i :0.0+"$X,$Y" \
	-c:v libx264 -qp 0 -r 30 \
	"$HOME/Vidio/box-$(date '+%y%m%d-%H%M-%S').mkv" &
	echo $! > /tmp/recordingpid
	updateicon "🔴𝗿𝗲𝗰"
}

case "$1" in
  Scale) Scale;;
	screencast) screencast;;
	audio) audio;;
    TeleRec) TeleRec;;
	video) video;;
	*selected) videoselected;;
	kill) killrecording;;
	*) ([ -f /tmp/recordingpid ] && asktoend && exit) || askrecording;;
esac
